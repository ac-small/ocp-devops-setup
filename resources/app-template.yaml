kind: Template
apiVersion: v1
metadata:
  name: demo-app-example 
  annotations:
    openshift.io/display-name: "Demo App Example with Database" 
    description: >-
      An example application with a front end (node), back end (Java), and database (PostgreSQL)
      to persist data.

      This app simply illustrates how to create a multi-pod template. 
    openshift.io/long-description: >-
      This template defines resources needed to deploy a simple demo app.
      There are two application containers and one database container, along with
      ConfigMaps and Secrets. 
    tags: "quickstart,java,demo" 
    iconClass: icon-openjdk 
    openshift.io/provider-display-name: "Nbody, Inc." 
    openshift.io/documentation-url: "https://github.com/pittar/ocp-devops-setup" 
    openshift.io/support-url: "https://google.ca" 
message: "Your app is being instantiated."
labels:
  template: "demo-app-example" 
  app: "demo-app"
objects:
- apiVersion: v1
  metadata:
    name: frontend-cm
  data:
    server.port: "8080"
    service.random.url: http://backend:8080
  kind: ConfigMap
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: backend
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentConfig: backend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          deploymentConfig: backend
        name: backend
      spec:
        containers:
        - name: backend
          imagePullPolicy: Always
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 75
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - backend
        from:
          kind: ImageStreamTag
          name: springboot-backend:${BACKEND_TAG}
          namespace: cicd
      type: ImageChange
    - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: frontend
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentConfig: frontend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          deploymentConfig: frontend
        name: frontend
      spec:
        containers:
        - envFrom:
            - configMapRef:
                name: frontend-cm
          imagePullPolicy: Always
          name: frontend
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 75
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - frontend
        from:
          kind: ImageStreamTag
          name: springboot-frontend:${FRONTEND_TAG}
          namespace: cicd
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: backend
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentConfig: backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: frontend
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentConfig: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: backend
  spec:
    to:
      kind: Service
      name: backend
      weight: 100
    wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: frontend
  spec:
    to:
      kind: Service
      name: frontend
      weight: 100
    wildcardPolicy: None
parameters:
  - name: BACKEND_TAG 
    displayName: Backend image tag
    description: The tag (version) of the backend image to use. 
    value: latest
    required: true
  - name: FRONTEND_TAG 
    displayName: Frontend image tag
    description: The tag (version) of the frontend image to use. 
    value: latest
    required: true 