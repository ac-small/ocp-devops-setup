kind: Template
apiVersion: v1
metadata:
  name: angular-app-template 
  annotations:
    openshift.io/display-name: "App Deployment Template: Angular" 
    description: >-
      Angular App

      An example application with an Angular front end and Spring Boot back end.

      This app simply illustrates how to create a multi-pod template. 
    openshift.io/long-description: >-
      This template defines resources needed to deploy a simple demo app.
      This template consists of just the front end app. 
    tags: "quickstart,nodejs,demo" 
    iconClass: icon-nodejs 
    openshift.io/provider-display-name: "Nobody, Inc." 
    openshift.io/documentation-url: "https://github.com/pittar/ocp-devops-setup" 
    openshift.io/support-url: "https://google.ca" 
message: "Your app is being instantiated."
labels:
  template: "angular-app-template" 
  app: "angular"
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${APP_NAME}-cm
  data:
    server_port: "8080"
    service_random_url: "http://backend:8080"
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${APP_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentConfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          deploymentConfig: ${APP_NAME}
        name: ${APP_NAME}
      spec:
        containers:
        - name: ${APP_NAME}
          envFrom:
            - configMapRef:
                name: ${APP_NAME}-cm
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 75
    test: false
    triggers:
    - imageChangeParams:
        automatic: false
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${IMAGE_NAME}:${IMAGE_TAG}
          namespace: cicd
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentConfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${APP_NAME}
  spec:
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
parameters:
  - name: APP_NAME
    displayName: App name
    description: The name of the app.
    value: angular-app
    required: true 
  - name: IMAGE_NAME
    displayName: angular image
    description: The angular image to use. 
    value: angular-app
    required: true 
  - name: IMAGE_TAG 
    displayName: angular image tag
    description: The tag (version) of the angular image to use. 
    value: latest
    required: true 
